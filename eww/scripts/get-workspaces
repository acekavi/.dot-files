#!/bin/bash

# Real-time workspace monitoring script for eww deflisten
# This script continuously monitors workspace changes and outputs JSON
# Following eww documentation: https://elkowar.github.io/eww/configuration.html

get_workspaces() {
    # Check if Hyprland is running
    if ! pgrep -x "Hyprland" > /dev/null; then
        echo "[]"
        return
    fi

    # Get workspace data from hyprctl
    workspaces=$(hyprctl workspaces -j 2>/dev/null)
    active_workspace=$(hyprctl activeworkspace -j 2>/dev/null | jq -r '.id' 2>/dev/null)

    if [ -z "$workspaces" ] || [ "$workspaces" = "null" ]; then
        echo "[]"
        return
    fi

    # Process the workspace data
    echo "$workspaces" | jq --argjson active "$active_workspace" '
    map({
        name: .id,
        windows: .windows,
        focused: (.id == $active),
        visible: (.id == $active),
        urgent: false,
        output: .monitor
    }) | sort_by(.name)'
}

# Output initial state
get_workspaces

# Monitor workspace changes in real-time using Hyprland's socket
# This provides instant updates when workspaces change
if [ -n "$HYPRLAND_INSTANCE_SIGNATURE" ] && [ -S "$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock" ]; then
    socat -u UNIX-CONNECT:"$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock" - | while read -r line; do
        # Check if the event is workspace related
        if [[ "$line" =~ ^(workspace|createworkspace|destroyworkspace|focusedmon|moveworkspace) ]]; then
            get_workspaces
        fi
    done
else
    # Fallback: poll every 250ms if socket monitoring fails
    while true; do
        sleep 0.25
        get_workspaces
    done
fi